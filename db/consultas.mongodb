/* CONSULTAS */

// 2.Mostrar todos los clientes registrados en la base de datos
use("db_campus_alquiler");
db.cliente.find({}, {_id:0});

//3. Obtener todos los automóviles disponibles para alquiler.
use("db_campus_alquiler");
db.automovil.aggregate([
  {
    $lookup: {
      from: "alquiler",
      localField: "ID_Automovil",
      foreignField: "ID_Automovil_id",
      as: "Alquiler_Info"
    }
  },
  {
    $match: {
      "Alquiler_Info.Estado":"Inactivo"
    }
  },
  {
    $project: {
      "Alquiler_Info":0
    }
  }
])

//4. Listar todos los alquileres activos junto con los datos de los clientes relacionados.
use("db_campus_alquiler");
db.alquiler.aggregate([
  {
    $match: {
      Estado: "Activo",
    },
  },
  {
    $lookup: {
      from: "cliente",
      localField: "ID_Cliente_id",
      foreignField: "ID_Cliente",
      as: "Cliente_Info",
    },
  },
  {
    $unwind: "$Cliente_Info",
  },
  {
    $project: {
      "Cliente_Info.ID_Cliente": 0,
    },
  },
]);

/* 5. Mostrar todas las reservas pendientes con los datos del cliente
y el automóvil reservado. */
use("db_campus_alquiler");
db.reserva.aggregate([
  {
    $match: {
      Estado: "Pendiente",
    },
  },
  {
    $lookup: {
      from: "cliente",
      localField: "ID_Cliente_id",
      foreignField: "ID_Cliente",
      as: "Cliente_Info",
    },
  },
  {
    $unwind: "$Cliente_Info",
  },
  {
    $lookup: {
      from: "automovil",
      localField: "ID_Automovil_id",
      foreignField: "ID_Automovil",
      as: "Automovil_Info",
    },
  },
  {
    $unwind: "$Automovil_Info",
  },
  {
    $project: {
        "ID_Cliente_id":0,
        "ID_Automovil_id":0,
      "Cliente_Info.ID_Cliente": 0,
      "Automovil_Info.ID_Automovil": 0,
    },
  },
]);

/* 6. Obtener los detalles del alquiler con el ID_Alquiler específico. */
use("db_campus_alquiler");
db.alquiler.aggregate([
  {
    $match: {
      ID_Alquiler: 2,
    },
  },
  {
    $lookup: {
      from: "cliente",
      localField: "ID_Cliente_id",
      foreignField: "ID_Cliente",
      as: "Cliente_Info",
    },
  },
  {
    $unwind: "$Cliente_Info",
  },
  {
    $lookup: {
      from: "automovil",
      localField: "ID_Automovil_id",
      foreignField: "ID_Automovil",
      as: "Automovil_Info",
    },
  },
  {
    $unwind: "$Automovil_Info",
  },
  {
    $project: {
      "Cliente_Info.ID_Cliente": 0,
      "Automovil_Info.ID_Automovil": 0,
    },
  },
]);

/* 7. Listar los empleados con el cargo de "Vendedor". */
use("db_campus_alquiler");
db.empleado.find({ Cargo: "Vendedor" });

/* 8. Mostrar la cantidad total de automóviles disponibles en cada
sucursal. */
use("db_campus_alquiler");
db.sucursal_automovil.aggregate([
  {
    $lookup: {
      from: "sucursal",
      localField: "ID_Sucursal_id",
      foreignField: "_id",
      as: "Sucursal_Info",
    },
  },
  {
    $unwind: "$Sucursal_Info",
  },
  {
    $project: {
      "Sucursal_Info.ID_Sucursal": 0,
      ID_Automovil_id: 0,
    },
  },
]);

/* 9. Obtener el costo total de un alquiler específico.*/
use("db_campus_alquiler");
db.alquiler.aggregate([{
  $match:{
    ID_Alquiler: 1
  }
},
{
$project:{
  _id: 0,
  Costo_Total: 1
}
}]);

/* 10.Listar los clientes con el DNI específico. */
use("db_campus_alquiler");
db.cliente.find({
  DNI: {$eq: 125356895},
});

/* 11.Mostrar todos los automóviles con una capacidad mayor a 5
personas. */
use("db_campus_alquiler");
db.automovil.find({
  Capacidad: { $gt: 5 },
});

/* 12.Obtener los detalles del alquiler que tiene fecha de inicio en
'2023-07-05'. */
use("db_campus_alquiler");
db.alquiler.find({
  Fecha_Inicio: {$eq:"2023-07-15"},
});

/* 13.Listar las reservas pendientes realizadas por un cliente
específico. */
use("db_campus_alquiler");
db.cliente.aggregate([
  {
    $lookup: {
      from: "reserva",
      localField: "ID_Cliente",
      foreignField: "ID_Cliente_id",
      as: "Reserva_Info",
    },
  },
  {
    $match: {
      "Reserva_Info.Estado": "Pendiente",
      "Reserva_Info.ID_Cliente_id": 1,
    }
  }
]);

/* 14.Mostrar los empleados con cargo de "Gerente" o "Asistente". */
use("db_campus_alquiler");
db.empleado.find({
  Cargo: { $in: ["Gerente", "Asistente"] },
});

/* 15.Obtener los datos de los clientes que realizaron al menos un
alquiler. */
use("db_campus_alquiler");
db.cliente.aggregate([
  {
    $lookup: {
      from: "alquiler",
      localField: "_id",
      foreignField: "ID_Cliente_id",
      as: "Alquiler_Info",
    },
  },
  {
    $match: {
      Alquiler_Info: { $ne: [] },
    },
  },
]);

/* 16.Listar todos los automóviles ordenados por marca y modelo. */
use("db_campus_alquiler");
db.automovil.find().sort({
  Marca: 1,
  Modelo: -1,
});

/* 17.Mostrar la cantidad total de automóviles en cada sucursal junto
con su dirección */
use("db_campus_alquiler");
db.sucursal_automovil.aggregate([
  {
    $group: {
      _id: "$ID_Sucursal_id",
      Cantidad_Total_Automoviles: { $sum: "$Cantidad_Disponible" },
    },
  },
  {
    $lookup: {
      from: "sucursal",
      localField: "_id",
      foreignField: "ID_Sucursal",
      as: "Sucursal_Info",
    },
  },
  {
    $unwind: "$Sucursal_Info",
  },
  {
    $project: {
      _id: 0,
      Sucursal: "$Sucursal_Info.Nombre",
      Direccion: "$Sucursal_Info.Direccion",
      Cantidad_Total_Automoviles: 1,
    },
  },
]);

/*18.Obtener la cantidad total de alquileres registrados en la base de
datos.*/
use("db_campus_alquiler");
db.alquiler.countDocuments({});

/*19.Mostrar los automóviles con capacidad igual a 5 personas y que
estén disponibles.*/
use("db_campus_alquiler");
db.automovil.aggregate([
  {
    $lookup: {
      from: "alquiler",
      localField: "_id",
      foreignField: "ID_Automovil_id",
      as: "Alquiler_Info"
    }
  },
  {
    $match: {
      "Alquiler_Info.Estado":"Inactivo",
      "Capacidad":{$gt: 2}
    }
  },
  {
    $project: {
      "_id": 1,
      "ID_Automovil": 1,
      "Marca": 1,
      "Modelo": 1,
      "Anio": 1,
      "Tipo": 1,
      "Capacidad": 1,
      "Precio_Diario":1,
      "Alquiler_Info.Estado":1
    }
  }
])

/*21.Listar los alquileres con fecha de inicio entre '2023-07-05' y
'2023-07-10'.*/
use("db_campus_alquiler");
db.alquiler.find({$and: [{Fecha_Inicio: {$gte:'2023-07-20' }},{Fecha_Inicio: {$lte: "2024-12-10"}}]});
